sudo: required # We need super user permission to execute build

services:
  - docker # tell travis we need docker

# Series of setup that needs to occur before we run our tests or deploy project
before_install:
  - docker build -t aseelaldallal/factorial-calculator-web-test -f ./client/Dockerfile.dev ./client

# Contain all different commands that need to be executed to run our test suite.
# Travis will be watching output of each command, and if the return status code
# is not 0, it'll assume that our code is broken.
script:
  - docker run -e CI=true aseelaldallal/factorial-calculator-web-test npm run test
# Gotcha: Travis assumes that tests run and exit. But npm run test does not exit,
# it waits for input. And so we add

after_success:
  - docker build -t aseel/factorial-client ./client
  - docker build -t aseel/factorial-nginx ./nginx
  - docker build -t aseel/factorial-server ./server
  - docker build -t aseel/factorial-worker ./worker
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker push aseel/factorial-client
  - docker push aseel/factorial-nginx
  - docker push aseel/factorial-server
  - docker push aseel/factorial-worker

deploy:
  provider: elasticbeanstalk
  region: ca-central-1
  app: Factorial Calculator
  env: FactorialCalculator-env-1
  bucket_name: elasticbeanstalk-ca-central-1-307308598241
  # This is where Travis zips up our project and stashes it inside of some S3 bucket
  bucket_path: docker-factorial-app
  on:
    branch: master # Only try to deploy this thing when the branch we are building on Travis is master
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
